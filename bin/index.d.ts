import { AgentListByQueueIdParamsType, AgentTransferParamsType, BargeParamsType, BlindTransferParamsType, BridgeCallParamsType, CallQueuesByQueueIdParamsType, CoachParamsType, CreateDirectoryParamsType, DisplaceParamsType, HangupParamsType, HoldParamsType, LoginParamsType, LogoutParamsType, MonitorParamsType, RecordsParamsType, RegisterQueueParamsType, RemoveQueueParamsType, RequestSentimentAnalysisParamsType, SetStateParamsType, SetStatusParamsType, StopSentimentAnalysisParamsType } from './interface';
export default class FreeSwitchEngine {
    private readonly defaultPortNumber;
    private readonly defaultPassword;
    private host;
    private port;
    private password;
    private logCommand;
    private api;
    setHost(host: string): void;
    setPort(port: number): void;
    setPassword(password: string): void;
    logout(params: LogoutParamsType): void;
    login(params: LoginParamsType): void;
    removeQueue(params: RemoveQueueParamsType): void;
    registerQueue(params: RegisterQueueParamsType): void;
    setStatus(params: SetStatusParamsType): void;
    setState(params: SetStateParamsType): void;
    requestSentimentAnalysis(params: RequestSentimentAnalysisParamsType): void;
    stopSentimentAnalysis(params: StopSentimentAnalysisParamsType): void;
    bridgeCall(params: BridgeCallParamsType): void;
    createDirectory(params: CreateDirectoryParamsType): void;
    records(params: RecordsParamsType): void;
    hangup(params: HangupParamsType): void;
    hold(params: HoldParamsType): void;
    displace(params: DisplaceParamsType): void;
    blindTransfer(params: BlindTransferParamsType): void;
    barge(params: BargeParamsType): void;
    monitor(params: MonitorParamsType): void;
    coach(params: CoachParamsType): void;
    agentListByQueues(params: AgentListByQueueIdParamsType): void;
    callQueuesByQueueId(params: CallQueuesByQueueIdParamsType): void;
    agentTransfer(params: AgentTransferParamsType): void;
}
